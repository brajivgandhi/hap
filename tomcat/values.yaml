## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Force target Kubernetes version (using Helm capabilites if not set)
##
kubeVersion:

## Bitnami Tomcat image version
## ref: https://hub.docker.com/r/bitnami/tomcat/tags/
##
image:
  registry: docker.io/library
  repository: tomcat
  tag: 10.0.21
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Set to true if you would like to see extra information on logs
  ##
  debug: true

## String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: tomcat

## String to fully override common.names.fullname template
##
fullnameOverride: tomcat

## Add labels to all the deployed resources
##
commonLabels: {}

## Add annotations to all the deployed resources
##
commonAnnotations:
  prometheus.io/scrape: "true"

## Kubernetes Cluster Domain
##
clusterDomain: cluster.local

## Extra objects to deploy (value evaluated as a template)
##
extraDeploy: []

## Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## Admin user
## ref: https://github.com/bitnami/bitnami-docker-tomcat#creating-a-custom-user
##
tomcatUsername: test

## Admin password
## ref: https://github.com/bitnami/bitnami-docker-tomcat#creating-a-custom-user
##
tomcatPassword: pass1234

## Expose management services
## ref: https://github.com/bitnami/charts/tree/master/bitnami/tomcat#configuration
##
tomcatAllowRemoteManagement: 0

## Command and args for running the container (set to default if not set). Use array form
##
command: []
args: []

## Additional environment variables to set
## Example:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars:
  - name: CATALINA_OPTS
    value: "-javaagent:\"/usr/share/tomcat/jmx_prometheus_javaagent-0.16.1.jar=8088:/etc/tomcat/config.yml\""
## ConfigMap with extra environment variables
##
extraEnvVarsCM:

## Secret with extra environment variables
##
extraEnvVarsSecret:

## Number of Tomcat replicas
##
replicaCount: 2

## Deployment
##
deployment:
  ## Deployment type: deployment or statefulset
  ##
  type: deployment

## Strategy to use to update Pods
##
updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: RollingUpdate

## Tomcat container port to open
##
containerPort: 8080

## Tomcat container extra ports to open
##
## Example:
## containerExtraPorts:
##  - name: ajp
##    containerPort: 8081
##
containerExtraPorts: {}

## Tomcat pods' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
##
podSecurityContext:
  enabled: true
  fsGroup: 1001

## Tomcat containers' SecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001

## Tomcat containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: 
    cpu: "1"
    memory: 2Gi
  requests:
    cpu: 300m
    memory: 512Mi

## Liveness and Readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
# livenessProbe:
#   enabled: true
#   httpGet:
#     path: /
#     port: http
#   initialDelaySeconds: 120
#   periodSeconds: 30
#   failureThreshold: 6
#   timeoutSeconds: 5
#   successThreshold: 1
# readinessProbe:
#   enabled: true
#   httpGet:
#     path: /
#     port: http
#   initialDelaySeconds: 30
#   periodSeconds: 30
#   failureThreshold: 3
#   timeoutSeconds: 3
#   successThreshold: 1

## Custom Liveness probes for Tomcat
##
customLivenessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 120
  periodSeconds: 30
  failureThreshold: 6
  timeoutSeconds: 10
  successThreshold: 1

## Custom Rediness probes Tomcat
##
customReadinessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 3
  timeoutSeconds: 10
  successThreshold: 1

## Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## Additional pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations:
  prometheus.io/scrape: "true"

## Pod affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAffinityPreset: ""

## Pod anti-affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAntiAffinityPreset: ""

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## Allowed values: soft, hard
##
nodeAffinityPreset:
  ## Node affinity type
  ## Allowed values: soft, hard
  ##
  type: ""
  ## Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## Affinity for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## Node labels for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Extra volumes to add to the deployment
##
extraVolumes:
- name: shared-volume
  emptyDir: {}
- name: shared-volume-lib
  emptyDir: {}
- name: jmx-config
  configMap:
    name: jmx-config

## Extra volume claim templates to add to the statefulset
##
extraVolumeClaimTemplates: []

## Extra volume mounts to add to the container
##
extraVolumeMounts:
- name: shared-volume
  mountPath: /usr/local/tomcat/webapps
- name: shared-volume-lib
  mountPath: /usr/share/tomcat
- name: jmx-config
  mountPath: /etc/tomcat
## Add init containers to the Tomcat pods.
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers:
- name: index
  image: busybox
  volumeMounts:
  - name: shared-volume
    mountPath: /app-data
  command: ["/bin/sh"]
  args: 
  - -c
  - |
    mkdir -p /app-data/ROOT
    echo '<h1>K8s Test</h1>' > /app-data/ROOT/index.html;
- name: jmx-exporter
  image: busybox
  volumeMounts:
  - name: shared-volume-lib
    mountPath: /app-data
  command: ["/bin/sh"]
  args: 
  - -c
  - |
    wget -O - https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar > /app-data/jmx_prometheus_javaagent-0.16.1.jar;
    chmod 755 /app-data/jmx_prometheus_javaagent-0.16.1.jar
    sleep 5;
# - name: index
#   image: busybox
#   volumeMounts:
#   - name: shared-volume
#     mountPath: /app-data
#   command: ["/bin/sh"]
#   args: 
#   - -c
#   - |
#     mkdir -p /app-data/ROOT
#     echo '<h1>K8s Test</h1>' > /app-data/ROOT/index.html;
#     wget -O - https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_servlet/0.0.17/tomcat_exporter_servlet-0.0.17.war > /app-data/metrics.war;
#     sleep 30;
# - name: metrics-lib
#   image: busybox
#   volumeMounts:
#   - name: shared-volume-lib
#     mountPath: /app-data
#   command: ["/bin/sh"]
#   args: 
#   - -c
#   - |
#     wget -O - https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient/0.16.0/simpleclient-0.16.0.jar > /app-data/simpleclient-0.16.0.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=org/teiid/simpleclient/1.0.2/simpleclient-1.0.2.jar > /app-data/simpleclient-1.0.2.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_common/0.16.0/simpleclient_common-0.16.0.jar > /app-data/simpleclient_common-0.16.0.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet/0.16.0/simpleclient_servlet-0.16.0.jar > /app-data/simpleclient_servlet-0.16.0.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_servlet_common/0.16.0/simpleclient_servlet_common-0.16.0.jar > /app-data/simpleclient_servlet_common-0.16.0.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=io/prometheus/simpleclient_hotspot/0.16.0/simpleclient_hotspot-0.16.0.jar > /app-data/simpleclient_hotspot-0.16.0.jar
#     wget -O - https://search.maven.org/remotecontent?filepath=nl/nlighten/tomcat_exporter_client/0.0.17/tomcat_exporter_client-0.0.17.jar > /app-data/tomcat_exporter_client-0.0.17.jar
#     sleep 50;


## Add sidecars to the Tomcat pods.
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## If true, use a Persistent Volume Claim, If false, use emptyDir
  ##
  enabled: false
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "local-path"
  ## Persistent Volume Claim annotations
  ##
  annotations:
  ## Persistent Volume Access Mode
  ##
  accessModes:
    - ReadWriteOnce
  ## Persistent Volume size
  ##
  size: 5Gi
  ## Name of an existing PVC
  ##
  existingClaim:
  ## Selector labels to use in volume claim template in statefulset
  ## Applicable when deployment.type is statefulset
  ##
  selectorLabels:

## Service parameters
##
service:
  ## Kubernetes svc type
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer
  ##
  type: NodePort
  ## HTTP Port
  ##
  port: 80
  ## Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePort: ""
  ## Use serviceLoadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  # loadBalancerIP:
  ## Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}

## Ingress configuratiom
##
ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: true

  ## Set this to true in order to add the corresponding annotations for cert-manager
  ##
  certManager: false

  ## When the ingress is enabled, a host pointing to this will be created
  ##
  hostname: tomcat.info

  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ##
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2

  ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can use the ingress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or
  ## let the chart create self-signed certificates for you
  ##
  tls: false

  ## The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## Example:
  ## extraHosts:
  ##   - name: tomcat.local
  ##     path: /
  ##
  extraHosts: []

  ## The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## Example:
  ## extraTls:
  ## - hosts:
  ##     - tomcat.local
  ##   secretName: tomcat.local-tls
  ##
  extraTls: []

  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----
  ## name should line up with a secretName set further up
  ##
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create the secret for you
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ##
  ## Example
  ## secrets:
  ##   - name: tomcat.local-tls
  ##     key: ""
  ##     certificate: ""
  ##
  secrets: []

  ## Override API Version (automatically detected if not set)
  ##
  apiVersion:

  ## Ingress Path
  ##
  path: /

  ## Ingress Path type
  ##
  pathType: Prefix

## Init containers parameters:
## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
##
volumePermissions:
  enabled: false
  image:
    registry: registry.cn-beijing.aliyuncs.com
    repository: kubegemsapp/bitnami-shell
    tag: 10
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## Init container' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #   cpu: 100m
    #   memory: 128Mi
    requests: {}
    #   cpu: 100m
    #   memory: 128Mi
